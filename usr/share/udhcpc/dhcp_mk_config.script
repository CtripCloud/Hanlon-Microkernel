#!/bin/sh

# udhcpc script edited by Tim Riker <Tim@Rikers.org>

[ -z "$1" ] && echo "Error: should be called from udhcpc" && exit 1

RESOLV_CONF="/etc/resolv.conf"
[ -n "$broadcast" ] && BROADCAST="broadcast $broadcast"
[ -n "$subnet" ] && NETMASK="netmask $subnet"

case "$1" in
	deconfig)
		/sbin/ifconfig $interface 0.0.0.0
		;;

	renew|bound)
		/sbin/ifconfig $interface $ip $BROADCAST $NETMASK

		if [ -n "$router" ] ; then
			echo "deleting routers"
			while route del default gw 0.0.0.0 dev $interface ; do
				:
			done

			metric=0
			for i in $router ; do
				route add default gw $i dev $interface metric $((metric++))
			done
		fi

		echo -n > $RESOLV_CONF
		[ -n "$domain" ] && echo search $domain >> $RESOLV_CONF
		for i in $dns ; do
			echo adding dns $i
			echo nameserver $i >> $RESOLV_CONF
		done
 
                # get the IP address from the "occam-server" DHCP parameter
                # (if it's set) or the "next-server" (siaddr) DHCP parameter
                # (if the "occam-server" parameter is not set but the
                # "next-server" parameter is set)
                if [ -n "$occam-server" ] ; then
                        # added by tjmcs, 10-Apr-2014
                        echo $occam-server > /tmp/occamServerIP.addr
                else
                    if [ -n "$siaddr" ] ; then
                        # added by tjmcs, 28-Feb-2012
                        echo $siaddr > /tmp/occamServerIP.addr
                    fi
                fi
 
                # and extract a couple of other parameters from the DHCP response
                # if they were set (the "occam-port" and "occam-base-uri" parameters)
                if [ -n "$occam-port" ] ; then
                    # added by tjmcs, 10-Apr-2014
                    echo $occam-port > /tmp/occamServerPort.addr
                fi
                if [ -n "$occam-base-uri" ] ; then
                # added by tjmcs, 10-Apr-2014
                echo $occam-base-uri > /tmp/occamServerBaseUri.addr
		;;
esac

exit 0
